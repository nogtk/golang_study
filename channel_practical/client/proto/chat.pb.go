// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/chat.proto

package sample

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnterRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterRequest) Reset()         { *m = EnterRequest{} }
func (m *EnterRequest) String() string { return proto.CompactTextString(m) }
func (*EnterRequest) ProtoMessage()    {}
func (*EnterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{0}
}

func (m *EnterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterRequest.Unmarshal(m, b)
}
func (m *EnterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterRequest.Marshal(b, m, deterministic)
}
func (m *EnterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterRequest.Merge(m, src)
}
func (m *EnterRequest) XXX_Size() int {
	return xxx_messageInfo_EnterRequest.Size(m)
}
func (m *EnterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnterRequest proto.InternalMessageInfo

func (m *EnterRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type EnterReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SenderName           string   `protobuf:"bytes,2,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	MessageId            string   `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterReply) Reset()         { *m = EnterReply{} }
func (m *EnterReply) String() string { return proto.CompactTextString(m) }
func (*EnterReply) ProtoMessage()    {}
func (*EnterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{1}
}

func (m *EnterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterReply.Unmarshal(m, b)
}
func (m *EnterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterReply.Marshal(b, m, deterministic)
}
func (m *EnterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterReply.Merge(m, src)
}
func (m *EnterReply) XXX_Size() int {
	return xxx_messageInfo_EnterReply.Size(m)
}
func (m *EnterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterReply.DiscardUnknown(m)
}

var xxx_messageInfo_EnterReply proto.InternalMessageInfo

func (m *EnterReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *EnterReply) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *EnterReply) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

type SendMessageRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SenderName           string   `protobuf:"bytes,2,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{2}
}

func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(m, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SendMessageRequest) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

type SendMessageReply struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageReply) Reset()         { *m = SendMessageReply{} }
func (m *SendMessageReply) String() string { return proto.CompactTextString(m) }
func (*SendMessageReply) ProtoMessage()    {}
func (*SendMessageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3}
}

func (m *SendMessageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageReply.Unmarshal(m, b)
}
func (m *SendMessageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageReply.Marshal(b, m, deterministic)
}
func (m *SendMessageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageReply.Merge(m, src)
}
func (m *SendMessageReply) XXX_Size() int {
	return xxx_messageInfo_SendMessageReply.Size(m)
}
func (m *SendMessageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageReply proto.InternalMessageInfo

func (m *SendMessageReply) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func (m *SendMessageReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*EnterRequest)(nil), "sample.EnterRequest")
	proto.RegisterType((*EnterReply)(nil), "sample.EnterReply")
	proto.RegisterType((*SendMessageRequest)(nil), "sample.SendMessageRequest")
	proto.RegisterType((*SendMessageReply)(nil), "sample.SendMessageReply")
}

func init() {
	proto.RegisterFile("proto/chat.proto", fileDescriptor_ed7e7dde45555b7d)
}

var fileDescriptor_ed7e7dde45555b7d = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x8d, 0x1f, 0xb5, 0x79, 0x5b, 0xa1, 0x0c, 0x1e, 0x42, 0x44, 0x94, 0xf5, 0x22, 0x08,
	0x51, 0x14, 0x7f, 0x81, 0xf4, 0xe0, 0x41, 0x85, 0xf4, 0x07, 0x84, 0x35, 0x3b, 0x5a, 0x21, 0x1f,
	0xeb, 0xee, 0xf6, 0xd0, 0xbb, 0x3f, 0x5c, 0xb2, 0xc9, 0x4a, 0xfd, 0x38, 0x79, 0xcb, 0x3c, 0xf3,
	0xf2, 0xcc, 0x64, 0x16, 0x33, 0x6d, 0x5a, 0xd7, 0x5e, 0x96, 0x4b, 0xe9, 0x32, 0xff, 0x49, 0x23,
	0x2b, 0x6b, 0x5d, 0xb1, 0xb8, 0xc0, 0x74, 0xde, 0x38, 0x36, 0x39, 0xbf, 0xaf, 0xd8, 0x3a, 0x3a,
	0x42, 0xbc, 0xb2, 0x6c, 0x8a, 0x46, 0xd6, 0x9c, 0x44, 0xa7, 0xd1, 0x79, 0x9c, 0x8f, 0x3b, 0xf0,
	0x28, 0x6b, 0x16, 0x2f, 0xc0, 0x10, 0xd6, 0xd5, 0x9a, 0x12, 0xec, 0xd7, 0x6c, 0xad, 0x7c, 0x0d,
	0xc1, 0x50, 0xd2, 0x09, 0x26, 0x96, 0x1b, 0x15, 0x34, 0xdb, 0xbe, 0x8b, 0x1e, 0x75, 0x22, 0x3a,
	0x06, 0x86, 0x6c, 0xf1, 0xa6, 0x92, 0x1d, 0xdf, 0x8f, 0x07, 0x72, 0xaf, 0xc4, 0x13, 0x68, 0xc1,
	0x8d, 0x7a, 0xe8, 0x41, 0x58, 0xed, 0xff, 0xf3, 0xc4, 0x02, 0xb3, 0x6f, 0xc2, 0x6e, 0xfd, 0x14,
	0x63, 0x59, 0x96, 0xac, 0x1d, 0x2b, 0xef, 0x1b, 0xe7, 0x5f, 0x35, 0x9d, 0xe1, 0x80, 0x8d, 0x69,
	0x4d, 0x11, 0x06, 0xf6, 0xca, 0xa9, 0x87, 0x83, 0xe5, 0xfa, 0x23, 0xc2, 0xee, 0xdd, 0x52, 0x3a,
	0xba, 0xc5, 0x9e, 0x3f, 0x0b, 0x1d, 0x66, 0xfd, 0x55, 0xb3, 0xcd, 0x93, 0xa6, 0xf4, 0x83, 0xea,
	0x6a, 0x2d, 0xb6, 0xae, 0x22, 0x9a, 0x63, 0xb2, 0xb1, 0x14, 0xa5, 0x21, 0xf6, 0xfb, 0xd7, 0xd3,
	0xe4, 0xcf, 0x9e, 0x17, 0x3d, 0x8f, 0xfc, 0x83, 0xde, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe7,
	0xa7, 0x5d, 0x10, 0xe4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Enter(ctx context.Context, in *EnterRequest, opts ...grpc.CallOption) (Chat_EnterClient, error)
	SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageReply, error)
}

type chatClient struct {
	cc grpc.ClientConnInterface
}

func NewChatClient(cc grpc.ClientConnInterface) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Enter(ctx context.Context, in *EnterRequest, opts ...grpc.CallOption) (Chat_EnterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/sample.Chat/Enter", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatEnterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_EnterClient interface {
	Recv() (*EnterReply, error)
	grpc.ClientStream
}

type chatEnterClient struct {
	grpc.ClientStream
}

func (x *chatEnterClient) Recv() (*EnterReply, error) {
	m := new(EnterReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*SendMessageReply, error) {
	out := new(SendMessageReply)
	err := c.cc.Invoke(ctx, "/sample.Chat/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Enter(*EnterRequest, Chat_EnterServer) error
	SendMessage(context.Context, *SendMessageRequest) (*SendMessageReply, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) Enter(req *EnterRequest, srv Chat_EnterServer) error {
	return status.Errorf(codes.Unimplemented, "method Enter not implemented")
}
func (*UnimplementedChatServer) SendMessage(ctx context.Context, req *SendMessageRequest) (*SendMessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Enter_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EnterRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Enter(m, &chatEnterServer{stream})
}

type Chat_EnterServer interface {
	Send(*EnterReply) error
	grpc.ServerStream
}

type chatEnterServer struct {
	grpc.ServerStream
}

func (x *chatEnterServer) Send(m *EnterReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sample.Chat/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sample.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _Chat_SendMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Enter",
			Handler:       _Chat_Enter_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/chat.proto",
}
